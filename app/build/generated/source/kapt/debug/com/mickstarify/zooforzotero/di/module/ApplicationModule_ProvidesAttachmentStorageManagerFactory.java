// Generated by Dagger (https://dagger.dev).
package com.mickstarify.zooforzotero.di.module;

import android.content.Context;
import com.mickstarify.zooforzotero.PreferenceManager;
import com.mickstarify.zooforzotero.ZoteroStorage.AttachmentStorageManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvidesAttachmentStorageManagerFactory implements Factory<AttachmentStorageManager> {
  private final ApplicationModule module;

  private final Provider<Context> contextProvider;

  private final Provider<PreferenceManager> preferenceManagerProvider;

  public ApplicationModule_ProvidesAttachmentStorageManagerFactory(ApplicationModule module,
      Provider<Context> contextProvider, Provider<PreferenceManager> preferenceManagerProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.preferenceManagerProvider = preferenceManagerProvider;
  }

  @Override
  public AttachmentStorageManager get() {
    return providesAttachmentStorageManager(module, contextProvider.get(), preferenceManagerProvider.get());
  }

  public static ApplicationModule_ProvidesAttachmentStorageManagerFactory create(
      ApplicationModule module, Provider<Context> contextProvider,
      Provider<PreferenceManager> preferenceManagerProvider) {
    return new ApplicationModule_ProvidesAttachmentStorageManagerFactory(module, contextProvider, preferenceManagerProvider);
  }

  public static AttachmentStorageManager providesAttachmentStorageManager(
      ApplicationModule instance, Context context, PreferenceManager preferenceManager) {
    return Preconditions.checkNotNull(instance.providesAttachmentStorageManager(context, preferenceManager), "Cannot return null from a non-@Nullable @Provides method");
  }
}
