// Generated by Dagger (https://dagger.dev).
package com.mickstarify.zooforzotero.di.module;

import android.content.Context;
import com.mickstarify.zooforzotero.PreferenceManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvidePreferenceManagerFactory implements Factory<PreferenceManager> {
  private final ApplicationModule module;

  private final Provider<Context> contextProvider;

  public ApplicationModule_ProvidePreferenceManagerFactory(ApplicationModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public PreferenceManager get() {
    return providePreferenceManager(module, contextProvider.get());
  }

  public static ApplicationModule_ProvidePreferenceManagerFactory create(ApplicationModule module,
      Provider<Context> contextProvider) {
    return new ApplicationModule_ProvidePreferenceManagerFactory(module, contextProvider);
  }

  public static PreferenceManager providePreferenceManager(ApplicationModule instance,
      Context context) {
    return Preconditions.checkNotNull(instance.providePreferenceManager(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
